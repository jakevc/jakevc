<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jake VanCampen</title>
    <link>https://jakevc.com/</link>
    <description>Recent content on Jake VanCampen</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 07 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jakevc.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Download SRA data with fasterq-dump</title>
      <link>https://jakevc.com/posts/2019/02/download-sra-data-with-fasterq-dump/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2019/02/download-sra-data-with-fasterq-dump/</guid>
      <description>The command line tool historically used to download public bioinformatics data from the Sequencing Read Archive (SRA) is fastq-dump. Fastq-dump was awesome when it was developed, until bioinformatics workflows became more parallelized across much larger datasets. Today, the SRA holds just over 5 PB of open access data, and the growth is rapid.
I was recently testing a pipeline on some public data. As I download fastq files from SRA using fastq-dump, it didn&amp;rsquo;t take long before I was getting impatient.</description>
    </item>
    
    <item>
      <title>Slow conda environment solving</title>
      <link>https://jakevc.com/posts/2018/11/slow-conda-environment-solving/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2018/11/slow-conda-environment-solving/</guid>
      <description>Conda is the package manager that comes with an anaconda, or miniconda3 distribution. In my experience, Conda does an excellent job managing dependencies and installing new packages, allowing you to install the packages you want and get back to work&amp;hellip; eventually. Conda also provides a virtual environment system that allows for generally reproducible execution environments. Snakemake makes use of this very efficiently.
I have previously experienced slow environment solving when trying to update or install packages using the conda command.</description>
    </item>
    
    <item>
      <title>Run Rstudio server in a SLURM allocated node</title>
      <link>https://jakevc.com/posts/2018/11/run-rstudio-server-in-a-slurm-allocated-node/</link>
      <pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2018/11/run-rstudio-server-in-a-slurm-allocated-node/</guid>
      <description>Rstudio server slurm I have been spoiled at my current workplace. We have Rstudio server running on our shared servers with access to lots of CPUs and enough memory to say the least, but I may not always find myself in this situation. When I was first learning R I was running Rstudio locally, but I wasn&amp;rsquo;t working with massive genomic datasets then, and required fewer CPUs and much less memory.</description>
    </item>
    
    <item>
      <title>How to make goslides</title>
      <link>https://jakevc.com/posts/2018/10/how-to-make-goslides/</link>
      <pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2018/10/how-to-make-goslides/</guid>
      <description>Creating Slides in Golang I am about to give a journal club presentation on a recent epigenetics paper. I have also been learning golang. Many learning materials, and golang presentations I run into are very clean html presentations with absolutely no bells and whistles, that appear to run in the browser.
I soon found out these presentations are generated from the &amp;lsquo;present&amp;rsquo; package, which is a built in golang tool at golang.</description>
    </item>
    
    <item>
      <title>Learning golang for bioinformatics</title>
      <link>https://jakevc.com/posts/2018/09/learning-golang-for-bioinformatics/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2018/09/learning-golang-for-bioinformatics/</guid>
      <description>What is Go? Go, or &amp;ldquo;golang&amp;rdquo; is a compiled language that was developped at Google in 2009. Golang is an open source language designed for simplicity, and portability within modern computational infrastructures. Golang is statically typed. In practice this means defining the types of variables, and explicitly keeping track of how those types are passed into and out of functions.
Hello World in go looks like this:
package main import &amp;#34;fmt&amp;#34; func main() { fmt.</description>
    </item>
    
    <item>
      <title>Align and count RNA-seq reads with STAR</title>
      <link>https://jakevc.com/posts/2017/11/align-and-count-rna-seq-reads-with-star/</link>
      <pubDate>Tue, 14 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2017/11/align-and-count-rna-seq-reads-with-star/</guid>
      <description>DNA makes RNA makes Protein, as goes the central dogma of molecular biology. RNA sequencing (RNA-seq) allows researchers to quantify which genes of the DNA are being expressed at any given time, in a given sample of DNA. This tool is very powerful because it allows us to ask questions about the difference in gene expression between different individuals, or between time points in the same individual.
RNA-seq produces a text file with millions of sequences we call &amp;lsquo;reads&amp;rsquo; that represent the genes they came from in the genome.</description>
    </item>
    
    <item>
      <title>Reply Times</title>
      <link>https://jakevc.com/posts/2017/11/reply-times/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2017/11/reply-times/</guid>
      <description>I wrote up an analysis of imessage data in jupyter notebook and found out that I may actually reply faster to my girlfriend over text during the daytime.</description>
    </item>
    
    <item>
      <title>SMRT Sequencing for smart genomics</title>
      <link>https://jakevc.com/posts/2017/11/smrt-sequencing-for-smart-genomics/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2017/11/smrt-sequencing-for-smart-genomics/</guid>
      <description>The University of Oregon Genomics and Cell Characterization Core Facility (GCCCF) hosted a seminar this past Friday, November 3rd in celebration of the new Pacific Biosciences sequencer, the Sequel, that is now accepting submissions for long-read sequencing.
Advances in SMRT sequencing The seminar kicked off with Steve Turner, Chief Technology Officer at PacBio. Turner&amp;rsquo;s excitement was contagious as he described the advantages of long-read sequencing technologies on the new Sequel system.</description>
    </item>
    
    <item>
      <title>My Development Environment</title>
      <link>https://jakevc.com/posts/2017/10/my-development-environment/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/posts/2017/10/my-development-environment/</guid>
      <description>When I began working on the computer full time earlier this year, I was still using the GUIs of my computer and had little intuition for how to organize my work in a coding Environment. Now I use exclusively the command line to navigate my MacBook Pro; collaborate and track my work using Github; and I write most assignments, and now blog posts in markdown.
The largest behavioral change for me was working primarily in text editors, Github, and the command line.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://jakevc.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jakevc.com/about/</guid>
      <description>I am a Bioinformatics Research Associate working at the forefront of evolutionary genomics and epigenetics in the Carbone lab. I am passionate about reproducible computational analyses that answer biological questions. For example, I have experience creating workflows in Snakemake and using git for version control leading to robust and well-documented downstream analyses.
Before joining the Carbone lab I worked in the Genomics core at the Stowers Institute for Medical Research. During the completion of my Master&amp;rsquo;s degree I studied the Ugandan red colobus genome (Piliocolobus rufomitratus).</description>
    </item>
    
  </channel>
</rss>